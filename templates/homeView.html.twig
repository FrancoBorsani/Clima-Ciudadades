<!DOCTYPE HTML PUBLIC>
<HTML>
   <HEAD>
      <TITLE>CLIMA-X-CIUDAD</TITLE>


      <link rel="stylesheet" href="css/styles.css">

   </HEAD>
   <BODY>
      <section class="top-banner">
  <div class="container">
    <h1 class="heading">Clima - API</h1>
    <form action="{{ path('insertarBD') }}" method="POST">
      <input type="text" id="ciudadInsertada" name="ciudadInsertada" placeholder="Ingresa una ciudad" autofocus>
      <button type="submit" id="botonPrincipal" onclick="insertar(this);">SUBMIT</button>
      <span class="msg"></span>
    </form>
  </div>
 
   <div id="result">
        <!--Position information will be inserted here-->
    </div>
    <button type="button" onclick="getLocation();">Mostrar posiciÃ³n actual</button>

<div id="map"></div>
</section>

<br></br>
<h2 style="color: white;">Ciudad mÃ¡s buscada:</h2>
<h3  style="color: white;" id="masBuscado" name="masBuscado" value="{{ masBuscado }}">{{ masBuscado }}</h3>

<section class="ajax-section">
  <div class="container">
    <ul class="cities"></ul>
  </div>
</section>




{% for flashMessage in app.session.flashbag.get('notice') %}

<div class="alert alert-success">
    {{ flashMessage }}
</div>

{% endfor %}



   </BODY>

<!--<script src="js/script.js"></script>-->
<script>
function getLocation() {
  if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(showPosition);

  } else {
    document.getElementById("result").innerHTML = "Geolocation is not supported by this browser.";
    x.innerHTML = "Geolocation is not supported by this browser.";
  }
}

function showPosition(position) {
   document.getElementById("result").innerHTML = "Latitud: " + position.coords.latitude + " - " + "Longitud: " +  position.coords.longitude;
}



</script>

<script>
function activar(){
  var formulario = document.getElementById("myform");   
  //Aqui tu codigo para mostrar tus objetos
  formulario.submit();

}





function insertar(x){

let buttonValue = document.getElementById('ciudadInsertada').value;
 
}
</script>



<script>
/*SEARCH BY USING A CITY NAME (e.g. athens) OR A COMMA-SEPARATED CITY NAME ALONG WITH THE COUNTRY CODE (e.g. athens,gr)*/
const form = document.querySelector(".top-banner form");
const input = document.querySelector(".top-banner input");
const msg = document.querySelector(".top-banner .msg");
const list = document.querySelector(".ajax-section .cities");
/*PUT YOUR OWN KEY HERE - THIS MIGHT NOT WORK
SUBSCRIBE HERE: https://home.openweathermap.org/users/sign_up*/
const apiKey = "4d8fb5b93d4af21d66a2948710284366";

document.getElementById("masBuscado").addEventListener("click", function(event){
  e.preventDefault();
    var buttonValue = document.getElementById('masBuscado').value;
 // let buttonValue = input.value;

  //check if there's already a city
  const listItems = list.querySelectorAll(".ajax-section .city");
  const listItemsArray = Array.from(listItems);

  if (listItemsArray.length > 0) {
    const filteredArray = listItemsArray.filter(el => {
      let content = "";
      //athens,gr
      if (buttonValue.includes(",")) {
        //athens,grrrrrr->invalid country code, so we keep only the first part of buttonValue
        if (buttonValue.split(",")[1].length > 2) {
          buttonValue = buttonValue.split(",")[0];
          content = el
            .querySelector(".city-name span")
            .textContent.toLowerCase();
        } else {
          content = el.querySelector(".city-name").dataset.name.toLowerCase();
        }
      } else {
        //athens
        content = el.querySelector(".city-name span").textContent.toLowerCase();
      }
      return content == buttonValue.toLowerCase();
    });

    if (filteredArray.length > 0) {
      msg.textContent = `You already know the weather for ${
        filteredArray[0].querySelector(".city-name span").textContent
      } ...otherwise be more specific by providing the country code as well ðŸ˜‰`;
      form.reset();
      input.focus();
      return;
    }
  }

  //ajax here
  const url = `https://api.openweathermap.org/data/2.5/weather?q=${buttonValue}&appid=${apiKey}&units=metric`;

  fetch(url)
    .then(response => response.json())
    .then(data => {
      const { main, name, sys, weather } = data;
      const icon = `https://s3-us-west-2.amazonaws.com/s.cdpn.io/162656/${
        weather[0]["icon"]
      }.svg`;

      const li = document.createElement("li");
      li.classList.add("city");
      const markup = `
        <h2 class="city-name" data-name="${name},${sys.country}">
          <span>${name}</span>
          <sup>${sys.country}</sup>
        </h2>
        <div class="city-temp">${Math.round(main.temp)}<sup>Â°C</sup></div>
        <figure>
          <img class="city-icon" src="${icon}" alt="${
        weather[0]["description"]
      }">
          <figcaption>${weather[0]["description"]}</figcaption>
        </figure>
      `;
      li.innerHTML = markup;
      list.appendChild(li);
    })
    .catch(() => {
      msg.textContent = "Please search for a valid city ðŸ˜©";
    });

  msg.textContent = "";
  form.reset();
  input.focus();
});




</script>


</HTML>
</HTML>


